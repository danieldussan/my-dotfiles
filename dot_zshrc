# ===== Powerlevel10k Instant Prompt =====
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# ===== Completion System =====
autoload -Uz compinit
compinit -d ~/.cache/zcompdump

# Completion styles
zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# ===== PATH Configuration =====
if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi

# Local user binaries and scripts
export PATH="$HOME/.local/bin:$HOME/scripts:$PATH"

# System and core utilities
export PATH="/usr/bin:$PATH"

# ===== Oh-My-Zsh Configuration =====
export ZSH="$HOME/.oh-my-zsh"
export ZSH_THEME="powerlevel10k/powerlevel10k"
plugins=( git zsh-autosuggestions zsh-syntax-highlighting sudo )
source $ZSH/oh-my-zsh.sh

# ===== Homebrew Configuration =====
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

# ===== FZF Configuration =====
# Initialize FZF
source <(fzf --zsh)

# General file search (includes hidden files, excludes .git)
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
# Ctrl+T: Insert file paths (uses same command as DEFAULT)
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
# Alt+C: Directory navigation (shows only folders) 
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

# Color scheme and display settings (maintaining your exact style)
FZF_COLOR_SCHEME='
  --color=fg:#c9c9c9,fg+:#F0F0F0,bg:#000000,bg+:#174c6c
  --color=hl:#5f87af,hl+:#5fd7ff,info:#afaf87,marker:#87ff00
  --color=prompt:#d7005f,spinner:#af5fff,pointer:#af5fff,header:#87afaf
  --color=border:#174c6c,label:#aeaeae,query:#d9d9d9'

FZF_DISPLAY_SETTINGS='
  --border="rounded" 
  --border-label="" 
  --preview-window="border-rounded" 
  --prompt="> "
  --marker=">" 
  --pointer="◆" 
  --separator="─" 
  --scrollbar="│"'

# Combine all options
export FZF_DEFAULT_OPTS="--height 50% $FZF_COLOR_SCHEME $FZF_DISPLAY_SETTINGS"

# Preview configurations
export FZF_CTRL_T_OPTS="--preview 'bat --color=always -n --line-range :500 {}'"
export FZF_ALT_C_OPTS="--preview 'eza --icons=always --tree --color=always {} | head -200'"

# ===== Aliases =====
# File listing
alias ls='eza -a --icons'       # List all files with icons
alias ll='eza -al --icons'      # Detailed list with icons
alias lt='eza -a --tree --level=1 --icons' # Tree view

# Editor shortcuts
alias n='nvim'
alias n20='PATH="/home/ddussan/.local/share/fnm/node-versions/v20.19.0/installation/bin:$PATH" nvim'
alias fnvim='nvim $(fzf --preview "bat --color=always {}")' # Fuzzy find files to edit

# Utilities
alias cat="bat"                 # Better cat with syntax highlighting
alias fman="compgen -c | fzf | xargs man" # Fuzzy find man pages
alias lg="lazygit"             # Terminal UI for git
alias lzd="lazydocker"         # Terminal UI for docker
alias act="source venv/bin/activate" # Activate Python virtualenv

# Work-specific
alias kwork="kitty @ launch --type=tab --cwd=~/Work/pc-lasoh-host-portal; kitty @ launch --type=tab --cwd=~/Work/pc-lasoh-guest-portal"


# ===== Custom Functions =====
# Extracts open ports from nmap scan results and copies to clipboard
# Usage: extractPorts <nmap_results_file>
function extractPorts(){
    ports="$(cat $1 | grep -oP '\d{1,5}/open' | awk '{print $1}' FS='/' | xargs | tr ' ' ',')"
    ip_address="$(cat $1 | grep -oP '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | sort -u | head -n 1)"
    echo -e "\n[*] Extracting information...\n" > extractPorts.tmp
    echo -e "\t[*] IP Address: $ip_address"  >> extractPorts.tmp
    echo -e "\t[*] Open ports: $ports\n"  >> extractPorts.tmp
    echo $ports | tr -d '\n' | wl-copy
    echo -e "[*] Ports copied to clipboard\n"  >> extractPorts.tmp
    cat extractPorts.tmp; rm extractPorts.tmp
}


# Yazi file manager wrapper that remembers last directory
# Usage: yz [yazi_options]
function yz() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
    yazi "$@" --cwd-file="$tmp"
    if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        builtin cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}


# ===== Powerlevel10k Finalization =====
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# ===== Fnm Initialization =====
eval "$(fnm env --use-on-cd)"

# ===== Bun Configuration =====
[ -s "/home/ddussan/.bun/_bun" ] && source "/home/ddussan/.bun/_bun"
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# ===== Zoxide Initialization =====
eval "$(zoxide init zsh)"

# ===== Key Bindings =====
bindkey "^H" backward-kill-word

# ===== GitHub Copilot CLI Initialization =====
eval "$(gh copilot alias -- zsh)"
